generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(cuid())
  email       String      @unique
  name        String
  password    String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  itineraries Itinerary[]

  @@map("users")
}

model Location {
  id          String       @id @default(cuid())
  name        String
  state       String
  description String?
  imageUrl    String?
  isActive    Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attractions Attraction[]
  itineraries Itinerary[]

  @@map("locations")
}

model Attraction {
  id             String          @id @default(cuid())
  name           String
  description    String?
  imageUrl       String?
  category       String
  rating         Float?
  duration       Int?
  price          Float?
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  locationId     String
  activities     Activity[]
  location       Location        @relation(fields: [locationId], references: [id])
  itineraryItems ItineraryItem[]

  @@map("attractions")
}

model Activity {
  id             String          @id @default(cuid()) @db.VarChar(255)
  name           String          @db.VarChar(255)
  description    String?         @db.VarChar(255)
  duration       Int
  price          Int?
  category       String          @db.VarChar(255)
  latitude       Float?
  longitude      Float?
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  attractionId   String          @db.VarChar(255)
  attraction     Attraction      @relation(fields: [attractionId], references: [id])
  itineraryItems ItineraryItem[]

  @@map("activities")
}

model Itinerary {
  id          String          @id @default(cuid())
  title       String
  startDate   DateTime
  endDate     DateTime
  totalDays   Int
  budget      Float?
  preferences String?
  status      String          @default("draft")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  userId      String
  locationId  String
  location    Location        @relation(fields: [locationId], references: [id])
  user        User            @relation(fields: [userId], references: [id])
  items       ItineraryItem[]

  @@map("itineraries")
}

model ItineraryItem {
  id           String      @id @default(cuid())
  day          Int
  startTime    DateTime
  endTime      DateTime
  title        String
  description  String?
  type         String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  itineraryId  String
  attractionId String?
  activityId   String?
  activity     Activity?   @relation(fields: [activityId], references: [id])
  attraction   Attraction? @relation(fields: [attractionId], references: [id])
  itinerary    Itinerary   @relation(fields: [itineraryId], references: [id])

  @@map("itinerary_items")
}
